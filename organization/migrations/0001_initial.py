# Generated by Django 4.2.7 on 2023-11-27 21:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dje.fields
import dje.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("dje", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Owner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, verbose_name="UUID"
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text="The date and time the object was created.",
                    ),
                ),
                (
                    "last_modified_date",
                    models.DateTimeField(
                        auto_now=True,
                        db_index=True,
                        help_text="The date and time the object was last modified.",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="The unique user-maintained name of the author, custodian, or provider of one or more software objects (licenses, components, products).",
                        max_length=70,
                    ),
                ),
                (
                    "homepage_url",
                    models.URLField(
                        blank=True,
                        help_text="The homepage URL of the owner.",
                        max_length=1024,
                        verbose_name="Homepage URL",
                    ),
                ),
                (
                    "contact_info",
                    models.CharField(
                        blank=True,
                        help_text="Information, frequently a dedicated email address, about contacting an owner for license clarifications and permissions.",
                        max_length=500,
                        verbose_name="contact information",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Extended notes about an owner."
                    ),
                ),
                (
                    "alias",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Alternative spellings of the name of the owner as a comma-separated list.",
                        max_length=500,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                "Organization",
                                "Organization: an ongoing entity that provides software or promotes standards.",
                            ),
                            (
                                "Person",
                                "Person: an individual that provides software or promotes standards.",
                            ),
                            (
                                "Project",
                                "Project: a dynamic collection of contributors to a software project.",
                            ),
                        ],
                        db_index=True,
                        default="Organization",
                        help_text="An owner type differentiates individuals, ongoing businesses, and dynamic organizations (such as software projects). An owner of any type can be associated with a license, component, or product. An owner can also be the parent of any other owner.",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
            bases=(dje.models.ParentChildModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Subowner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, verbose_name="UUID"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Comments about the relationship of the Child Owner to the Parent Owner. For example, an owner was acquired by another owner, or an owner works for another owner.",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True,
                        help_text="Format YYYY-MM-DD. This date is intended to show the beginning of a parent/child owner relationship.",
                        null=True,
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Format YYYY-MM-DD. This date is intended to show the ending of a parent/child owner relationship.",
                        null=True,
                    ),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_parents",
                        to="organization.owner",
                    ),
                ),
                (
                    "dataspace",
                    models.ForeignKey(
                        editable=False,
                        help_text="A Dataspace is an independent, exclusive set of DejaCode data, which can be either nexB master reference data or installation-specific data.",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="dje.dataspace",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_children",
                        to="organization.owner",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("parent", "child", "start_date", "end_date"),
                    ("dataspace", "uuid"),
                },
            },
        ),
        migrations.AddField(
            model_name="owner",
            name="children",
            field=models.ManyToManyField(
                through="organization.Subowner", to="organization.owner"
            ),
        ),
        migrations.AddField(
            model_name="owner",
            name="created_by",
            field=models.ForeignKey(
                editable=False,
                help_text="The application user who created the object.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="created_%(class)ss",
                serialize=False,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="owner",
            name="dataspace",
            field=models.ForeignKey(
                editable=False,
                help_text="A Dataspace is an independent, exclusive set of DejaCode data, which can be either nexB master reference data or installation-specific data.",
                on_delete=django.db.models.deletion.PROTECT,
                to="dje.dataspace",
            ),
        ),
        migrations.AddField(
            model_name="owner",
            name="last_modified_by",
            field=dje.fields.LastModifiedByField(
                editable=False,
                help_text="The application user who last modified the object.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="modified_%(class)ss",
                serialize=False,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="owner",
            unique_together={("dataspace", "uuid"), ("dataspace", "name")},
        ),
    ]
