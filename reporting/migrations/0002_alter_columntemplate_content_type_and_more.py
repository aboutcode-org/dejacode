# Generated by Django 5.0.6 on 2024-08-02 08:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('reporting', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='columntemplate',
            name='content_type',
            field=models.ForeignKey(help_text='Choose the primary data source for your column template: licenses, components, or owners.', limit_choices_to=models.Q(models.Q(('app_label', 'license_library'), ('model', 'license')), models.Q(('app_label', 'component_catalog'), ('model', 'component')), models.Q(('app_label', 'component_catalog'), ('model', 'subcomponent')), models.Q(('app_label', 'component_catalog'), ('model', 'package')), models.Q(('app_label', 'organization'), ('model', 'owner')), models.Q(('app_label', 'workflow'), ('model', 'request')), models.Q(('app_label', 'license_library'), ('model', 'licensetag')), models.Q(('app_label', 'license_library'), ('model', 'licenseprofile')), models.Q(('app_label', 'license_library'), ('model', 'licensechoice')), models.Q(('app_label', 'product_portfolio'), ('model', 'product')), models.Q(('app_label', 'product_portfolio'), ('model', 'productcomponent')), models.Q(('app_label', 'product_portfolio'), ('model', 'productpackage')), models.Q(('app_label', 'product_portfolio'), ('model', 'productinventoryitem')), models.Q(('app_label', 'product_portfolio'), ('model', 'productdependency')), models.Q(('app_label', 'product_portfolio'), ('model', 'codebaseresource')), _connector='OR'), on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype', verbose_name='object type'),
        ),
        migrations.AlterField(
            model_name='query',
            name='content_type',
            field=models.ForeignKey(help_text='Choose the primary data source for your query: licenses, components, or owners.', limit_choices_to=models.Q(models.Q(('app_label', 'license_library'), ('model', 'license')), models.Q(('app_label', 'component_catalog'), ('model', 'component')), models.Q(('app_label', 'component_catalog'), ('model', 'subcomponent')), models.Q(('app_label', 'component_catalog'), ('model', 'package')), models.Q(('app_label', 'organization'), ('model', 'owner')), models.Q(('app_label', 'workflow'), ('model', 'request')), models.Q(('app_label', 'license_library'), ('model', 'licensetag')), models.Q(('app_label', 'license_library'), ('model', 'licenseprofile')), models.Q(('app_label', 'license_library'), ('model', 'licensechoice')), models.Q(('app_label', 'product_portfolio'), ('model', 'product')), models.Q(('app_label', 'product_portfolio'), ('model', 'productcomponent')), models.Q(('app_label', 'product_portfolio'), ('model', 'productpackage')), models.Q(('app_label', 'product_portfolio'), ('model', 'productinventoryitem')), models.Q(('app_label', 'product_portfolio'), ('model', 'productdependency')), models.Q(('app_label', 'product_portfolio'), ('model', 'codebaseresource')), _connector='OR'), on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype', verbose_name='object type'),
        ),
    ]
