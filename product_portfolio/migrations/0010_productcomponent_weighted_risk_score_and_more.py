# Generated by Django 5.0.9 on 2024-12-24 14:37

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('product_portfolio', '0009_product_vulnerabilities_risk_threshold'),
    ]

    operations = [
        migrations.AddField(
            model_name='productcomponent',
            name='weighted_risk_score',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='Risk score from 0.0 to 10.0, with higher values indicating greater vulnerability risk. This score is the maximum of the weighted severity multiplied by exploitability, capped at 10, which is then multiplied by the associated exposure risk factor assigned to the product item purpose (when available).', max_digits=3, null=True),
        ),
        migrations.AddField(
            model_name='productitempurpose',
            name='exposure_factor',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='A number between 0.0 and 1.0 that identifies the vulnerability exposure risk of a package as it is actually used in the context of a product, with 1.0 being the highest exposure risk and 0.0 being no exposure risk at all.', max_digits=2, null=True, validators=[django.core.validators.MaxValueValidator(1.0), django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AddField(
            model_name='productpackage',
            name='weighted_risk_score',
            field=models.DecimalField(blank=True, decimal_places=1, help_text='Risk score from 0.0 to 10.0, with higher values indicating greater vulnerability risk. This score is the maximum of the weighted severity multiplied by exploitability, capped at 10, which is then multiplied by the associated exposure risk factor assigned to the product item purpose (when available).', max_digits=3, null=True),
        ),
        migrations.RunSQL(
            """
            DROP VIEW IF EXISTS product_portfolio_productinventoryitem;
            CREATE VIEW product_portfolio_productinventoryitem
            AS
              SELECT
                pc.uuid,
                pc.component_id,
                NULL as package_id,
                CONCAT(component.name, ' ', component.version) as item,
                'component' as item_type,
                pc.dataspace_id,
                pc.product_id,
                pc.review_status_id,
                pc.feature,
                component.usage_policy_id,
                pc.created_date,
                pc.last_modified_date,
                pc.reference_notes,
                pc.purpose_id,
                pc.notes,
                pc.is_deployed,
                pc.is_modified,
                pc.extra_attribution_text,
                pc.package_paths,
                pc.issue_ref,
                pc.weighted_risk_score,
                pc.license_expression,
                pc.created_by_id,
                pc.last_modified_by_id
              FROM product_portfolio_productcomponent AS pc
              INNER JOIN component_catalog_component AS component ON pc.component_id=component.id
              UNION ALL
              SELECT
                pp.uuid,
                NULL as component_id,
                pp.package_id,
                package.filename as item,
                'package' as item_type,
                pp.dataspace_id,
                pp.product_id,
                pp.review_status_id,
                pp.feature,
                package.usage_policy_id,
                pp.created_date,
                pp.last_modified_date,
                pp.reference_notes,
                pp.purpose_id,
                pp.notes,
                pp.is_deployed,
                pp.is_modified,
                pp.extra_attribution_text,
                pp.package_paths,
                pp.issue_ref,
                pp.weighted_risk_score,
                pp.license_expression,
                pp.created_by_id,
                pp.last_modified_by_id
              FROM product_portfolio_productpackage AS pp
              INNER JOIN component_catalog_package AS package ON pp.package_id=package.id
            ;
            """,
            reverse_sql="DROP VIEW IF EXISTS product_portfolio_productinventoryitem;"
        ),
    ]
